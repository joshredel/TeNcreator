<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:ac="com.adobe.ac.*" 
	verticalAlign="middle" horizontalAlign="center" 
	width="400" height="220" 
	defaultButton="{changeButton}" title="Change Password"
	showCloseButton="false" removedFromStage="nullOutObserverPopup()"
	show="resetView()" creationPolicy="all">
	
	<mx:Script>
		<![CDATA[
			import org.ten.classes.DataShop;
			import org.ten.events.LoginEvent;
			import mx.validators.Validator;
			import mx.controls.Alert;
			import org.ten.classes.User;
			import com.adobe.crypto.SHA1;
			import mx.managers.PopUpManager;
			
			[Bindable]
			/**
			 * @private
			 * Our reference to the data shop.
			 */
			private var dataShop:DataShop = DataShop.getInstance();
			
			/**
			 * @private
			 * Asks the User class to attempt a login with the server.
			 */
			private function changePassword():void
			{
				// first check to see if they entered valid data
				var results:Array = Validator.validateAll([passwordValidator, password2Validator]);
				
				var errors:String = "";
				
				if(password.text != password2.text)
				{
					errors += "- The passwords must match\n";
				}
				
				if(password.text.toLowerCase() == "temp")
				{
					errors += "- The password cannot be 'temp'\n";
				}
				
				if(results.length > 0 || errors.length > 0)
				{
					currentState = "ChangeFailed";
					if(errors.length > 0)
					{
						Alert.show("The following was invalid:\n" + errors, "Password Change Invalid");
					}
					return;
				}
				
				// hash our password first
				var hashedPassword:String = SHA1.hash(password.text);
				
				// save the new password
				var user:User = dataShop.currentUser;
				user.password = hashedPassword;
				User.saveUser(user);
				
				// tell them
				Alert.show("Your password was successfully changed!", "Password Change Successful");
				
				// logout and then back in
				dataShop.userLoggedIn = false;
				dataShop.userLoggedIn = true;
				
				// show that we're waiting
				currentState = "ProcessingLogin";
			}
			
			/**
			 *  The observer will prevent the component from being garbage collected
			 *  and it will still respond to data changes in memory.
			 *  The observers will be null out, so that the popup can be garbage collected
			 */
			private function nullOutObserverPopup():void
			{
				observeLoginPassed = null;
			}
			
			/**
			 * @private
			 * Handles a successful login by simply closing the window
			 */
			private function handleLoginPassed():void
			{
				// clear the text and reset the errors strings
				currentState = "";
				username.errorString = "";
				password.text = "";
				password.errorString = "";
			}
			
			/**
			 * @private
			 * Resets the errors strings, field values, and current state
			 * when the login window is shown.
			 */
			private function resetView():void
			{
				// change the view
				currentState = "";
				
				// clear the text and reset the errors strings
				username.errorString = "";
				password.text = "";
				password.errorString = "";
			}
		]]>
	</mx:Script>
	
	<!-- Observers -->
	<ac:ObserveValue id="observeLoginPassed" source="{dataShop.userLoggedIn}" value="{true}" handler="handleLoginPassed"/>
	
	<!-- Validators -->
	<mx:StringValidator id="passwordValidator" source="{password}" property="text" required="true" minLength="1"/>
	<mx:StringValidator id="password2Validator" source="{password2}" property="text" required="true" minLength="1"/>
	
	<!-- States -->
	<mx:states>
		<mx:State name="ProcessingLogin">
			<mx:AddChild relativeTo="{this}" position="lastChild">
				<mx:ProgressBar indeterminate="true" labelPlacement="center" 
					label="LOGGING IN..." width="80%"/>
			</mx:AddChild>
			<mx:RemoveChild target="{loginForm}"/>
			<mx:SetProperty target="{changeButton}" name="enabled" value="{false}" />
		</mx:State>
		
		<mx:State name="ChangeFailed">
			<mx:AddChild relativeTo="{loginForm}" position="before">
				<mx:Label text="Please make sure the data you entered is valid." color="red"/>
			</mx:AddChild>
			<mx:SetProperty target="{this}" name="height" value="260"/>
			<mx:SetProperty target="{changeButton}" name="enabled" value="{true}" />
		</mx:State>
	</mx:states>
	
	<!-- Display Elements -->
	<mx:Form id="loginForm" width="100%" height="100%">
		<mx:FormItem label="Username:" required="true" width="90%">
			<mx:Label id="username" text="{dataShop.currentUser.username}" />
		</mx:FormItem>
		
		<mx:FormItem label="New Password:" required="true" width="90%">
			<mx:TextInput id="password" displayAsPassword="true" creationComplete="focusManager.setFocus(password)"/>
		</mx:FormItem>
		
		<mx:FormItem label="New Password (confirm):" required="true" width="90%">
			<mx:TextInput id="password2" displayAsPassword="true"/>
		</mx:FormItem>
	</mx:Form>
				
	<mx:ControlBar id="changeBar" verticalAlign="middle">
		<mx:Button id="changeButton" label="Change Password" click="changePassword()"/>
	</mx:ControlBar>
</mx:TitleWindow>
